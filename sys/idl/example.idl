#[derive(Copy, Clone)]
pub struct Foo {
    a: isize,
    b: isize
}

pub struct FooNode {
    a: Foo,
    b: OptRRef<FooNode>
}

pub trait Helper {
    fn count_widgets(&self) -> usize;
    fn add_foo(&mut self, a: Foo /*(Foo, Foo)*/) -> bool;
}

pub trait Bar {
    fn do_thing(&mut self, a: Foo, b: RRef<FooNode/*(Foo, FooNode)*/>) -> bool;
}
